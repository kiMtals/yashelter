version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: shelter_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  flask-app:
    build: ./app
    environment:
      DATABASE_URL: "postgresql://postgres:password@db:5432/shelter_db"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    
  load-tester:
    build: ./load-tester
    environment:
      TARGET_URL: "http://flask-app:8000"
    ports:
      - "3006:3006"
    depends_on:
      - flask-app

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - flask-app
    
  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - "9093:9093"
    depends_on:
      - prometheus
      

  grafana:
    image: grafana/grafana
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data: